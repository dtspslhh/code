-Don't treat the interview as an exam. Treat it as an interactive session where you will be explaining your thought process.
-Questions may not be extremely difficult. Don't try overly complex solutions. If you cannot explain your solution clearly in 5 minutes, it's probably too complex.
-You are expected to explain your solution to the interviewer. The correctness of code is important but you also need to talk about how it works.
-You should ask the interviewer if you have a question on the problem or are unsure about what he/she wants you to do.

 The interview process.
-The whole interview process contains several stages: initial interviews, onsite interviews, extending an offer, and accepting an offer. For internships, you do 2 phone interviews only. No onsites.
-The initial interviews may be 1 to 2 rounds. We usually do 2 rounds for international candidates. Each round will be one single interview lasting about 45 minutes. The initial interviews are usually done via telephone or skype, with coding on collabedit.com.
 -If the initial interviews are good, we go on to an onsite interview. The onsite interview is usually 1 round with 3 back-to-back interviews of 45 minutes each. 2 of them will be focusing on coding, 1 on general questions. The onsite interview is usually done at Facebook office, but sometimes we do that in remote locations as well (like on campus).
-If you pass the onsite interview, we will extend an offer letter to you. You will have some time to consider it (but why would you need time? You are going to accept right away, correct???)
If you know anyone at your school that might be interested in working at Facebook or can recommend any sites, forums, programming competitions I can find more rockstars like you, please let me know! 

Here's the email on how to prepare for your interview. Make sure you read it carefully from beginning to end. Please research any recent news about Facebook for talking points and more information about the company. The interviewer will be giving you feedback on 3 main areas: algorithmic knowledge, coding, and culture fit. You need to do well in ALL 3 areas to get good feedback.

Algorithmic knowledge - Can you explain your solution? Can you explain why one algorithm is better than the other? Do you know what the most optimal algorithm is? Don't overcomplicate the interview problem. Come up with a working solution first and then work on optimizing it. Sure there are algorithms that might be the most optimal but if it is going to take you 45 minutes to explain it, then go with the easier one first. Ask interviewer questions to clarify what he/she is looking for. 
Coding - ­ You will be asked to produce clean, efficient code in a reasonable amount of time. You have 45 minutes on the call. You might be asked 1 or 2 questions within that timeframe so your goal is to finish the interview question as best as you can and move on. Do not assume you only have 1 question to solve. If the interviewer gives you hints to improve your code, take them and run with them. It is good to adjust and work through the problems with the interviewer to show your thought process and problem solving ability. At the bottom of this email, there are several links for you to practice coding puzzles.
Communication - Interviewer will be asking questions to see how you communicate. Are you able to talk about things top down in a hierarchical way? For ex., if they ask you about a project you have done, they want you to first give an overview of the project. Then, they want hear you describe the project in detail and explain what your involvement is. Was the problem you were working on hard? Why was the problem hard? How did you go about coming up with a solution? We want to hear about work that YOU HAVE DONE, not a project where you were not very involved. They want to hear you talk about your project from beginning to end.
They will also ask you why you want to work here at Facebook. They want to hear an answer from an engineer perspective, not from a user perspective. An user would say something like "I want to work at Facebook because it's the world most famous social networking company. I love Facebook, I use it everyday. It's my dream to work at Facebook". This is NOT the type of answer they are looking for. They want to hear something more in depth like "I want to work at Facebook because I want to work with some of the smartest engineers in the world. I am very excited about the technologies Facebook is currently using like blah and blah. I read Facebook contributes a lot of technologies to open source blah blah". If you are not very familiar with the technologies we use at Facebook, you need to. It will be helpful to take some time to think about this beforehand.
Interviewers will also be gauging how proactive you are in asking questions. They ALWAYS ask open ended questions with NOT alot of details BECAUSE they want to see if you can proactively ASK questions to narrow down the requirements. THIS IS VERY IMPORTANT! You need to demonstrate that you can do this. Don't be shy. You can ask as many questions as you want. The question might be big but it's your job to ask questions and narrow the question into a smaller one. 

Be prepared for technical questions involving coding or algorithms in your best language, design patterns, and more specific questions to your background. It may also help to review core CS concepts (data structures, binary trees, link lists, object oriented analysis/design) as well as subjects pertaining to the scale of our environment.

DURING THE INTERVIEW, please do not type on your computer UNLESS you are coding. You should not be searching for anything on the web. If you have seen the coding problem before, please let the interviewer know so he can give you another question.

At the end, they will ask you if you have any questions. Be happy, excited, curious, and make sure you do ask questions! If you don't, the interviewer will think you are not very interested in Facebook. Ask the engineer why he likes working at Facebook. Ask him what his challenges are. Ask him how big his team is. Ask him anything! DO NOT ask interviewers anything about salary or anything about recruiting (offers). Engineer is there to gauge your technical abilities. If you have any questions in regards to the recruiting process, please ask me, not the engineer.

We want to find people who don’t code to code but code to build.
